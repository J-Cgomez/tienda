import { OnChanges, OnDestroy, AfterViewInit, ChangeDetectorRef, TemplateRef, SimpleChanges, EventEmitter, NgZone } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { NuLazyService } from '@ng-util/lazy';
import { TinymceOptions } from './tinymce.options';
export declare class TinymceComponent implements AfterViewInit, OnChanges, OnDestroy, ControlValueAccessor {
    private defConfig;
    private lazySrv;
    private ngZone;
    private doc;
    private cd;
    private _instance;
    private value;
    load: boolean;
    id: string;
    private onChange;
    private onTouched;
    config: any;
    placeholder: string;
    inline: boolean;
    set disabled(value: boolean);
    private _disabled;
    _loading: string;
    _loadingTpl: TemplateRef<any>;
    set loading(value: string | TemplateRef<any>);
    /** 延迟初始化 */
    delay: number;
    ready: EventEmitter<any>;
    get instance(): any;
    private _getWin;
    constructor(defConfig: TinymceOptions, lazySrv: NuLazyService, ngZone: NgZone, doc: any, cd: ChangeDetectorRef);
    private initDelay;
    private init;
    private destroy;
    private setDisabled;
    ngAfterViewInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngOnDestroy(): void;
    writeValue(value: string): void;
    registerOnChange(fn: (_: any) => {}): void;
    registerOnTouched(fn: () => {}): void;
    setDisabledState(isDisabled: boolean): void;
}
